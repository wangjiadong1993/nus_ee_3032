#include "Temp_3032.h"
#include "Bluetooth_3032.h"
#include "GPS_3032.h"
#include "Cons_3032.h"
#include "Load_3032.h"
#include "Temp_3032.h"

volatile uint32_t Timer = 0;
/* data buffer */
uint8_t *buf = (uint8_t *)0x2007C000; // 16KB


//GPS buffer, for update and storage;
double latitude = 0.0;
double longitude = 0.0;
double velocity = 0.0;
int date_l =0;
int  time_l =0;
//GPS string
char str[200] = "0";
int num = 0;

__INLINE static void systick_delay (uint32_t delayTicks) {
  uint32_t currentTicks;

  currentTicks = Timer;	// read current tick counter
  // Now loop until required number of ticks passes
  while ((Timer - currentTicks) < delayTicks);
}

void SysTick_Handler (void) /* SysTick Interrupt Handler (1ms)   */
{
    static uint32_t ticks;
    /* LED blink at frequency 1Hz */
    if (ticks++ >=10)
    {
        disk_timerproc();
        ticks = 0;
    }
    Timer++;
}
//init SD card
void SD_init_3032()
{
	    printf("\nAccess SDC/MMC via SPI on NXP LPC1700. "__DATE__" "__TIME__"\n\n");
	    if (SD_Init () == SD_FALSE)
	    {
	        printf("Failed to init the card, pls check the card.\n");
	        while (1);
	    }
	    if (SD_ReadConfiguration () == SD_FALSE)
	    {
	        printf("Failed to read card CID or CSD.\n");
	        while (1);
	    }

	    printf("Card init OK.\n\n");
	    //file system initialization
	    fl_init();
	    if (fl_attach_media(media_read, media_write) != FAT_INIT_OK)
	     {
	    	printf("ERROR: Media attach failed\n");
	    	return;
	     }
	     printf("hello, finished \n");
	     fl_listdirectory("/");
}

void initialization_3032()
{
	//GPS	//GPS switch
	init_uart2();
	//SD card
	SD_init_3032();
	//load sensor
	init_load();
	//temp sensor	& heater
	init_temp();
	//GSM

	//Bluetooth
	init_bt();
}

//GPS interrupt
void UART2_IRQHandler(void)
{
	uint8_t roo = 100;
	char* substr =NULL;
	float time_l = 0.0, date_l = 0.0;
	float longi_l=0.0, lati_l=0.0,  velo_l= 0.0;
	int i =0;
	int j=0;
	UART_Receive(LPC_UART2,&roo,1, BLOCKING);
	str[num]=roo;
	num++;
	if(roo=='\n')
	{
		str[num]='\0';
		substr = strstr(str, "$GPRMC,");
		//printf("%s\n",substr);
		if(substr != NULL)
		{
		   for(i=0; i<=strlen(substr); i++)
		   {
			   if(substr[i]==',')
				   j++;
		   }
		   if(j==12)
		   {
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&time_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&longi_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&lati_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&velo_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&date_l);
			   printf("\n date: %f time: %f latitude: %f longitude: %f velocity: %f", date_l, time_l, lati_l, longi_l,velo_l);
		   }
		   j=0;

		}
		num=0;
	}
	if(lati_l >=0.01 || longi_l >= 0.01)
	{
		strstr(str, "E") == NULL ? longitude = longi_l  : longitude = longi_l*-1;
	}
}

int main()
{
	SysTick_Config(SystemCoreClock/1000 - 1);  /* Generate interrupt each 1 ms      */
	initialization_3032();
	printf("finished initialization, our smart shoe pad is going to work now\n");
	systick_delay(1000);
	printf("finished timer testing\n");
	if(load_write(30.0, 20.0, 5.0, 311215, 235955))
		printf("succeed\n");
	else
		printf("failed\n");
	load_read();
	while(1)
	{
		//check the bt

		//check for interrupts

		//read data from from sensors

		//storage

		//sending data
		systick_delay(10);
	}
	return 0 ;
}
