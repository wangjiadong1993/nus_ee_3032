
#include "GPS_3032.h"

char str[1024] = "0";
int num = 0;

volatile uint32_t msTicks; // counter for 1ms SysTicks

//  SysTick_Handler - just increment SysTick counter
void SysTick_Handler(void) {
  msTicks++;
}

// ****************
// systick_delay - creates a delay of the appropriate number of Systicks (happens every 1 ms)
__INLINE static void systick_delay (uint32_t delayTicks) {
  uint32_t currentTicks;

  currentTicks = msTicks;	// read current tick counter
  // Now loop until required number of ticks passes
  while ((msTicks - currentTicks) < delayTicks);
}

void UART2_IRQHandler(void)
{
	uint8_t roo = 100;
	char* substr =NULL;
	float time_l = 0.0, date_l = 0.0;
	float longi_l=0.0, lati_l=0.0,  velo_l= 0.0;
	int i =0;
	int j=0;
	UART_Receive(LPC_UART2,&roo,1, BLOCKING);
	str[num]=roo;
	num++;
	if(roo=='\n')
	{
		str[num]='\0';
		substr = strstr(str, "$GPRMC,");
		printf("%s\n",substr);
		if(substr != NULL)
		{
		   for(i=0; i<=strlen(substr); i++)
		   {
			   if(substr[i]==',')
				   j++;
		   }
		   if(j==12)
		   {
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&time_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&longi_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&lati_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&velo_l);
			   substr = strstr(substr, ",")+1;
			   substr = strstr(substr, ",")+1;
			   sscanf(substr, "%f",&date_l);
			   printf("\n date: %f time: %f latitude: %f longitude: %f velocity: %f", date_l, time_l, lati_l, longi_l,velo_l);
		   }
		   j=0;

		}
		num=0;
	}
	if(lati_l != 0.0)
	{
		//NVIC_DisableIRQ(UART2_IRQn);
	}
}


// ****************
int main(void) {


	init_uart2();
	NVIC_EnableIRQ(UART2_IRQn);
	while(1)
	{
		//printf("come back");
//		printf("%c", roo);
//		if(LPC_UART2->LSR & 0x1)
//		{
//
////			roo = LPC_UART2->RBR;
////			str[num] = roo;
////			num++;
//			//printf("There is some data\n");
//		//}
////		if(num == 100)
////		{
////			str[100]='\0';
////			printf("%s", str);
////			num = 0;
////		}
//
//		//printf("There is no data\n");
//		//UART_Receive(LPC_UART2, &roo, 1, BLOCKING);
//		//printf("%c", roo);
	}

	return 0 ;
}

